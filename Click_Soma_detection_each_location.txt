// Made by Yano
// Select neuron and detect the center of soma

// Select image directory
dir = getDirectory("Choose an image directory");

// Get image file list
ImageList = getFileList(dir);

// Set color to show the location of soma
setForegroundColor(0, 0, 255); // Blue

xmSave = newArray();
ymSave = newArray();

for(i=0;i<ImageList.length;i++){

    // Open image
    // Check if image file or not
    if(indexOf(ImageList[i], ".tiff") != -1){
        run("Open...", "path=" + dir + "\\" + ImageList[i]);
        
        // Change image type. 8bit color -> RGB color
        run("RGB Color");
            
        // plot the center of soma
        for(ii = 0; ii < xmSave.length; ii++){
                       
            // Select the center of soma
            run("Specify...", "width=10 height=10 x=" + xmSave[ii] + " y=" + ymSave[ii] + " oval constrain centered");

            // Coloring the center of soma
            run("Fill", "slice"); 
        }

        // Get file name without extention
        fileName = substring(ImageList[i], 0, lengthOf(ImageList[i]) - lengthOf(".tiff"));

        // Select neuron
        do{        
        
            // Get xm of the image
            run("Measure");
            xmFirstMeasure = getResult("XM", 0);
            run("Clear Results");
        
            // Wait user to select neurons
            waitForUser("Select neurons");
        
            // Measure coordinates of selected neurons
            run("Measure");
        
            // Get coordinates of selected neurons
            x = newArray();
            y = newArray();
            xmTmp = getResult("XM", 0);
            if(xmFirstMeasure != xmTmp){
                x = newArray(nResults);
                y = newArray(nResults);
                for(ii = 0; ii < nResults; ii++){
                    x[ii] = getResult("X", ii);
                    y[ii] = getResult("Y", ii);
                }
            }
            
            // Close a result window
            resultNumber = x.length;
            run("Clear Results");
            
            // Detect the center of soma(Center of Mass)
            xm = newArray(resultNumber);
            ym = newArray(resultNumber);
            for(ii = 0; ii < resultNumber; ii++){
        
                // Find Center of Mass
                makeOval(x[ii]-15, y[ii]-15, 30, 30); // Make circle surounding soma (diameter is 1.2 times larger than soma)
                run('Invert');
                run("Measure");            
                // Get the coordinate
                xm[ii] = getResult("XM", ii);
                ym[ii] = getResult("YM", ii);
            }
        
            // Add new coordinates to previous coordinates
            tempXm = xmSave;
            tempYm = ymSave;
            xmSave = newArray(tempXm.length + resultNumber);
            ymSave = newArray(tempYm.length + resultNumber);
            for(ii = 0; ii < tempXm.length; ii++){
                xmSave[ii] = tempXm[ii];
                ymSave[ii] = tempYm[ii];
            }
            for(ii = tempXm.length; ii < xmSave.length; ii++){
                xmSave[ii] = xm[ii - tempXm.length];
                ymSave[ii] = ym[ii - tempYm.length];
            }
        
            run("Clear Results");
            close();
            run("Open...", "path=" + dir + "\\" + ImageList[i]);
            run("RGB Color"); // Change image type. 8bit color -> RGB color
            
            // plot the center of soma
            for(ii = 0; ii < xmSave.length; ii++){
                           
                // Select the center of soma
                run("Specify...", "width=10 height=10 x=" + xmSave[ii] + " y=" + ymSave[ii] + " oval constrain centered");

                // Coloring the center of soma
                run("Fill", "slice"); 
            }
        
            // Ask users if they selected all neurons
            Dialog.create("Selected all neurons?");
            Dialog.addCheckbox("Yeah!!!", true);
            Dialog.show();
            flag = Dialog.getCheckbox();
            
        } while(flag != 1);
    }
    close();
}

// Save coordinates of detected neurons
for(ii = 0; ii < xmSave.length; ii++){
    setResult("DetectedX", ii, xmSave[ii]);
    setResult("DetectedY", ii, ymSave[ii]);
} 
saveAs("Results", dir + fileName + "DetectedLocation" + ".xls");